import{_ as e,o as s,c as a,e as i}from"./app-DkPTN1x9.js";const n="/dadagarden.github.io/assets/1-CDtf3qkA.png",l={},t=i(`<h2 id="文件上传" tabindex="-1"><a class="header-anchor" href="#文件上传"><span>文件上传</span></a></h2><p>Web开发中的上传功能允许用户将文件从客户端传输到服务器，而下载功能则相反，是从服务器传输文件到客户端。</p><h3 id="基础前端项目搭建" tabindex="-1"><a class="header-anchor" href="#基础前端项目搭建"><span>基础前端项目搭建</span></a></h3><div class="language-cmd line-numbers-mode" data-highlighter="shiki" data-ext="cmd" data-title="cmd" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">vue create demo</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>具体创建Vue项目参考<a href="/technology/frontend-dev/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96Vue-cli" target="_blank" rel="noopener noreferrer">前端工程化Vue-cli</a></p><ul><li>记得提前引入路由</li><li>使用手动配置的方式</li></ul></div><ul><li>定义一个路由，用于导航到<code>文件上传</code>页面</li><li>在View文件夹中新建一个<code>UploadView.vue</code>文件</li></ul><div class="language-uploadview.vue line-numbers-mode" data-highlighter="shiki" data-ext="uploadview.vue" data-title="uploadview.vue" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>&lt;template&gt;</span></span>
<span class="line"><span>    &lt;div class=&quot;upload&quot;&gt;</span></span>
<span class="line"><span>      &lt;h1&gt;文件上传页面&lt;/h1&gt;</span></span>
<span class="line"><span>    &lt;/div&gt;</span></span>
<span class="line"><span>&lt;/template&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在router包的<code>index.js</code>中引入上述的视图文件并定义好全局路由</li></ul><div class="language-index.js line-numbers-mode" data-highlighter="shiki" data-ext="index.js" data-title="index.js" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>// 导入createRouter和createWebHistory函数，用于创建Vue路由实例</span></span>
<span class="line"><span>import { createRouter, createWebHistory } from &#39;vue-router&#39;</span></span>
<span class="line"><span>// 导入UploadView组件，用于文件上传页面</span></span>
<span class="line"><span>import UploadView from &#39;../views/UploadView.vue&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 定义路由数组，包含一个路由对象</span></span>
<span class="line"><span>const routes = [</span></span>
<span class="line"><span>  {</span></span>
<span class="line"><span>    // 定义路由的路径</span></span>
<span class="line"><span>    path: &#39;/upload&#39;,</span></span>
<span class="line"><span>    // 定义路由的名称</span></span>
<span class="line"><span>    name: &#39;upload&#39;,</span></span>
<span class="line"><span>    // 指定路由对应的组件</span></span>
<span class="line"><span>    component: UploadView</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 使用createRouter函数创建路由实例，并传入路由数组和路由模式</span></span>
<span class="line"><span>const router = createRouter({</span></span>
<span class="line"><span>  history: createWebHistory(process.env.BASE_URL), // 使用HTML5 History模式</span></span>
<span class="line"><span>  routes // 传入路由数组</span></span>
<span class="line"><span>})</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 导出路由实例</span></span>
<span class="line"><span>export default router</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在需要的导航页面中使用<code>&lt;router-link to=&quot;/upload&quot;&gt;文件上传&lt;/router-link&gt;</code>标签进行路由跳转。</li></ul><div class="hint-container tip"><p class="hint-container-title">提示</p><p>此处我直接将文件上传页面的路由定义在App.vue中，仅做Demo演示。</p><ul><li>文件下载页面同理</li></ul></div><figure><img src="`+n+`" alt="编写基本路由" tabindex="0" loading="lazy"><figcaption>编写基本路由</figcaption></figure><ul><li>引入<code>ElementPlus</code>的依赖，并进行全局配置，方便后续表单制作。</li></ul><div class="language-cmd line-numbers-mode" data-highlighter="shiki" data-ext="cmd" data-title="cmd" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">pnpm install </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">element</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">plus</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>在<code>main.js</code>中全局配置</li></ul><div class="language-main.js line-numbers-mode" data-highlighter="shiki" data-ext="main.js" data-title="main.js" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>//引入ElementPlus</span></span>
<span class="line"><span>import ElementPlus from &#39;element-plus&#39;</span></span>
<span class="line"><span>import &#39;element-plus/dist/index.css&#39;</span></span>
<span class="line"><span>//引入中文语言包</span></span>
<span class="line"><span>import zhCn from &#39;element-plus/es/locale/lang/zh-cn&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>//全局挂载</span></span>
<span class="line"><span>createApp(App).use(ElementPlus, { locale: zhCn }).use(store).use(router).mount(&#39;#app&#39;)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="基础后端项目搭建" tabindex="-1"><a class="header-anchor" href="#基础后端项目搭建"><span>基础后端项目搭建</span></a></h3><h3 id="_1-编写文件上传的表单页面" tabindex="-1"><a class="header-anchor" href="#_1-编写文件上传的表单页面"><span>1. 编写文件上传的表单页面</span></a></h3><h2 id="文件下载" tabindex="-1"><a class="header-anchor" href="#文件下载"><span>文件下载</span></a></h2><p>下载文件通过IO流实现，所以多数框架并没有对文件下载进行封装处理。</p>`,20),p=[t];function d(r,c){return s(),a("div",null,p)}const u=e(l,[["render",d],["__file","文件上传与下载.html.vue"]]),h=JSON.parse('{"path":"/technology/demo/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E4%B8%8E%E4%B8%8B%E8%BD%BD.html","title":"文件上传与下载","lang":"zh-CN","frontmatter":{"title":"文件上传与下载","icon":"code","date":"2024-09-27T00:00:00.000Z","category":"Demo","tags":["SpringBoot","Web开发","Vue3"],"cover":"/assets/images/demo.jpg","excerpt":"开发Web应用时，文件上传是很常见的一个需求，浏览器通过表单形式将文件以流的形式传递给服务器，服务器再对上传的数据进行解析处理。下载文件通过IO流实现，所以多数框架并没有对文件下载进行封装处理。","order":"1","description":"文件上传 Web开发中的上传功能允许用户将文件从客户端传输到服务器，而下载功能则相反，是从服务器传输文件到客户端。 基础前端项目搭建 提示 具体创建Vue项目参考前端工程化Vue-cli 记得提前引入路由 使用手动配置的方式 定义一个路由，用于导航到文件上传页面 在View文件夹中新建一个UploadView.vue文件 在router包的index....","head":[["meta",{"property":"og:url","content":"https://matike16.github.io/dadagarden.github.io/dadagarden.github.io/technology/demo/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E4%B8%8E%E4%B8%8B%E8%BD%BD.html"}],["meta",{"property":"og:site_name","content":"哒哒的花园"}],["meta",{"property":"og:title","content":"文件上传与下载"}],["meta",{"property":"og:description","content":"文件上传 Web开发中的上传功能允许用户将文件从客户端传输到服务器，而下载功能则相反，是从服务器传输文件到客户端。 基础前端项目搭建 提示 具体创建Vue项目参考前端工程化Vue-cli 记得提前引入路由 使用手动配置的方式 定义一个路由，用于导航到文件上传页面 在View文件夹中新建一个UploadView.vue文件 在router包的index...."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://matike16.github.io/dadagarden.github.io/dadagarden.github.io/assets/images/demo.jpg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-27T03:50:52.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://matike16.github.io/dadagarden.github.io/dadagarden.github.io/assets/images/demo.jpg"}],["meta",{"name":"twitter:image:alt","content":"文件上传与下载"}],["meta",{"property":"article:author","content":"哒哒溜"}],["meta",{"property":"article:tag","content":"SpringBoot"}],["meta",{"property":"article:tag","content":"Web开发"}],["meta",{"property":"article:tag","content":"Vue3"}],["meta",{"property":"article:published_time","content":"2024-09-27T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-27T03:50:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"文件上传与下载\\",\\"image\\":[\\"https://matike16.github.io/dadagarden.github.io/dadagarden.github.io/assets/images/demo.jpg\\"],\\"datePublished\\":\\"2024-09-27T00:00:00.000Z\\",\\"dateModified\\":\\"2024-09-27T03:50:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"哒哒溜\\",\\"url\\":\\"https://github.com/matike16\\"}]}"]]},"headers":[{"level":2,"title":"文件上传","slug":"文件上传","link":"#文件上传","children":[{"level":3,"title":"基础前端项目搭建","slug":"基础前端项目搭建","link":"#基础前端项目搭建","children":[]},{"level":3,"title":"基础后端项目搭建","slug":"基础后端项目搭建","link":"#基础后端项目搭建","children":[]},{"level":3,"title":"1. 编写文件上传的表单页面","slug":"_1-编写文件上传的表单页面","link":"#_1-编写文件上传的表单页面","children":[]}]},{"level":2,"title":"文件下载","slug":"文件下载","link":"#文件下载","children":[]}],"git":{"createdTime":1727399781000,"updatedTime":1727409052000,"contributors":[{"name":"matike16","email":"lda240820@gmail.com","commits":3}]},"readingTime":{"minutes":2.16,"words":649},"filePathRelative":"technology/demo/文件上传与下载.md","localizedDate":"2024年9月27日","autoDesc":true}');export{u as comp,h as data};
