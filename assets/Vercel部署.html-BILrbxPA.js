import{_ as i,c as s,o as e,e as a}from"./app-CT64SQ9Y.js";const t="/dadagarden.github.io/assets/1-C2MtPDEQ.png",l="/dadagarden.github.io/assets/2--aeYhNSw.png",n="/dadagarden.github.io/assets/3-CWb-7huX.png",h="/dadagarden.github.io/assets/4-1rGBHhTi.png",r="/dadagarden.github.io/assets/5-ChJTvLVP.png",d={},c=a('<div class="hint-container note"><p class="hint-container-title">注</p><p>本篇文章将讲解如何将项目部署到Vercel中，并重定向地址到阿里云购买的域名。以实现在国内的正常访问。</p></div><h2 id="前提" tabindex="-1"><a class="header-anchor" href="#前提"><span>前提</span></a></h2><div class="hint-container important"><p class="hint-container-title">重要</p><ul><li>配置Vercel之前，请确保你已经购买好了域名，域名可以在许多平台上购买到，此处以阿里云平台为例。</li><li>同时确保你有使用代理的能力，避免无法访问Vercel。</li></ul></div><h2 id="什么是vercel" tabindex="-1"><a class="header-anchor" href="#什么是vercel"><span>什么是Vercel？</span></a></h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>Vercel 是一个前端开发平台，专注于提供快速的全栈 Web 应用部署和<mark>静态网站托管服务</mark>。它由 Next.js 框架的创建团队开发，并且非常适合与 Next.js 配合使用。</p></div><h3 id="特点" tabindex="-1"><a class="header-anchor" href="#特点"><span>特点</span></a></h3><ol><li><p><strong>自动化部署</strong>：每当代码推送到 Git 仓库（例如 GitHub、GitLab 或 Bitbucket）时，Vercel 会自动进行构建和部署。</p></li><li><p><strong>全球 CDN</strong>：Vercel 通过其全球内容分发网络（CDN）提供快速的页面加载速度，确保用户无论身处何地都能快速访问网站。（<mark>国内依然会受到DNS污染的影响而导致无法访问</mark>）</p></li><li><p><strong>服务器端渲染（SSR）和静态生成（SSG）</strong>：Vercel 支持 Next.js 的服务器端渲染和静态生成功能，可以生成 SEO 友好的内容和更快的初始加载时间。</p></li><li><p><strong>自动化缩放</strong>：根据流量情况，Vercel 会自动扩展应用，确保网站始终能快速响应。</p></li><li><p><strong>集成</strong>：与多种工具和服务集成，如分析、日志记录、身份验证等，增强应用的功能。</p><p>通过Vercel部署我们可以节省一笔不小的服务器费用，主要开支就只有域名购买了！ 接下来就开始我们的配置流程吧！</p></li></ol><h2 id="配置本地项目" tabindex="-1"><a class="header-anchor" href="#配置本地项目"><span>配置本地项目</span></a></h2><h3 id="设置环境变量base-url" tabindex="-1"><a class="header-anchor" href="#设置环境变量base-url"><span>设置环境变量BASE_URL</span></a></h3><div class="hint-container important"><p class="hint-container-title">重要</p><p>根据Github Pages中的部署规则我们知道，只有配置好了<code>base</code>才能正常加载页面样式，但是我们的base已经设置为Github中的仓库地址了，要实现在Github Pages和Vercel中部署的网页都正常显示样式，我们还需要对base进行修改。</p></div><ul><li>首先通过VSCode打开本地项目</li><li>找到<code>.github/workflows/</code>文件夹下的<code>deploy-docs.yml</code>文件，并打开。</li><li>定位到<code>name: 构建文档</code>下的<code>env:</code>处</li><li>添加新的一行代码</li></ul><div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">BASE_URL</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">/test.github.io/</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> #其中test为你创建的仓库名称</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="'+t+`" alt="设置环境变量BASE_URL" tabindex="0" loading="lazy"><figcaption>设置环境变量BASE_URL</figcaption></figure><ul><li>接着来到<code>src /vuepress/</code>文件夹下</li><li>打开<code>config.ts</code></li><li>定义并修改<code>base</code>，添加<code>dest</code></li><li>对应代码如下：</li></ul><div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" data-title="ts" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 定义base</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> base</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">process</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">env</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">BASE_URL</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> ||</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">as</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;/&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> \`/</span><span style="--shiki-light:#032F62;--shiki-dark:#C678DD;">\${</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;">string</span><span style="--shiki-light:#032F62;--shiki-dark:#C678DD;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">/\`</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 引用base并添加dest</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">base</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#E06C75;">dest</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;src/.vuepress/dist&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container important"><p class="hint-container-title">重要</p><p>因为 TypeScript 对 <code>base</code> 属性的类型进行了严格限制。它期望 <code>base</code> 是一个以斜杠开头和结尾的字符串，并且不接受动态的字符串类型。所以定义<code>base</code>处的代码要使用类型断言。</p></div><figure><img src="`+l+`" alt="修改base，添加dest" tabindex="0" loading="lazy"><figcaption>修改base，添加dest</figcaption></figure><div class="hint-container tip"><p class="hint-container-title">提示</p><ul><li><code>base</code> 配置影响生成的 HTML 文件中的资源路径。</li><li><code>dest</code> 配置影响生成的文件目录，但不影响 CSS 样式的加载。</li></ul></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>假设你还在config.ts中定义了<code>head</code>，那么<code>head</code>对应的<code>href</code>也要修改。</p><ul><li><code>head</code>就是网页显示时导航栏的图标</li><li>添加<code>head</code>代码如下：</li></ul><div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" data-title="ts" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 动态设置 favicon 的路径</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> faviconPath</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#032F62;--shiki-dark:#C678DD;">\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">base</span><span style="--shiki-light:#032F62;--shiki-dark:#C678DD;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">favicon.ico\`</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 修改 head</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#E06C75;">head</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">	[</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">		&quot;link&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">		{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">			rel</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;icon&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">			href</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">faviconPath</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">		},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">	],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">],</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+n+'" alt="修改head" tabindex="0" loading="lazy"><figcaption>修改head</figcaption></figure></div><ul><li>此时项目代码已经配置完成，接着推送到Github上，推送代码见上一章<a href="./Pages%E9%83%A8%E7%BD%B2">Pages 部署</a>；</li></ul><h2 id="部署github仓库到vercel中" tabindex="-1"><a class="header-anchor" href="#部署github仓库到vercel中"><span>部署Github仓库到Vercel中</span></a></h2><ul><li>进入<a href="https://vercel.com/" target="_blank" rel="noopener noreferrer">Vercel</a>,使用Github账户登录（必须）</li></ul><figure><img src="'+h+'" alt="使用Github登录Velcel" tabindex="0" loading="lazy"><figcaption>使用Github登录Velcel</figcaption></figure><ul><li>在Overview下点击<code>Add New...</code>，选择<code>Project</code></li></ul><figure><img src="'+r+'" alt="新建项目" tabindex="0" loading="lazy"><figcaption>新建项目</figcaption></figure>',25),p=[c];function o(k,g){return e(),s("div",null,p)}const b=i(d,[["render",o],["__file","Vercel部署.html.vue"]]),y=JSON.parse('{"path":"/about/blog-building/Vercel%E9%83%A8%E7%BD%B2.html","title":"Vercel 部署","lang":"zh-CN","frontmatter":{"title":"Vercel 部署","icon":"gears","date":"2024-07-21T00:00:00.000Z","category":"博客搭建","tags":["Vercel"],"order":"4","description":"注 本篇文章将讲解如何将项目部署到Vercel中，并重定向地址到阿里云购买的域名。以实现在国内的正常访问。 前提 重要 配置Vercel之前，请确保你已经购买好了域名，域名可以在许多平台上购买到，此处以阿里云平台为例。 同时确保你有使用代理的能力，避免无法访问Vercel。 什么是Vercel？ 提示 Vercel 是一个前端开发平台，专注于提供快速的...","head":[["meta",{"property":"og:url","content":"https://matike16.github.io/dadagarden.github.io/dadagarden.github.io/about/blog-building/Vercel%E9%83%A8%E7%BD%B2.html"}],["meta",{"property":"og:site_name","content":"哒哒的花园"}],["meta",{"property":"og:title","content":"Vercel 部署"}],["meta",{"property":"og:description","content":"注 本篇文章将讲解如何将项目部署到Vercel中，并重定向地址到阿里云购买的域名。以实现在国内的正常访问。 前提 重要 配置Vercel之前，请确保你已经购买好了域名，域名可以在许多平台上购买到，此处以阿里云平台为例。 同时确保你有使用代理的能力，避免无法访问Vercel。 什么是Vercel？ 提示 Vercel 是一个前端开发平台，专注于提供快速的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-21T11:51:59.000Z"}],["meta",{"property":"article:author","content":"哒哒溜"}],["meta",{"property":"article:tag","content":"Vercel"}],["meta",{"property":"article:published_time","content":"2024-07-21T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-21T11:51:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Vercel 部署\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-07-21T00:00:00.000Z\\",\\"dateModified\\":\\"2024-07-21T11:51:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"哒哒溜\\",\\"url\\":\\"https://github.com/matike16\\"}]}"]]},"headers":[{"level":2,"title":"前提","slug":"前提","link":"#前提","children":[]},{"level":2,"title":"什么是Vercel？","slug":"什么是vercel","link":"#什么是vercel","children":[{"level":3,"title":"特点","slug":"特点","link":"#特点","children":[]}]},{"level":2,"title":"配置本地项目","slug":"配置本地项目","link":"#配置本地项目","children":[{"level":3,"title":"设置环境变量BASE_URL","slug":"设置环境变量base-url","link":"#设置环境变量base-url","children":[]}]},{"level":2,"title":"部署Github仓库到Vercel中","slug":"部署github仓库到vercel中","link":"#部署github仓库到vercel中","children":[]}],"git":{"createdTime":1721562719000,"updatedTime":1721562719000,"contributors":[{"name":"matike16","email":"lda240820@gmail.com","commits":1}]},"readingTime":{"minutes":3.16,"words":948},"filePathRelative":"about/blog-building/Vercel部署.md","localizedDate":"2024年7月21日","excerpt":"<div class=\\"hint-container note\\">\\n<p class=\\"hint-container-title\\">注</p>\\n<p>本篇文章将讲解如何将项目部署到Vercel中，并重定向地址到阿里云购买的域名。以实现在国内的正常访问。</p>\\n</div>\\n<h2>前提</h2>\\n<div class=\\"hint-container important\\">\\n<p class=\\"hint-container-title\\">重要</p>\\n<ul>\\n<li>配置Vercel之前，请确保你已经购买好了域名，域名可以在许多平台上购买到，此处以阿里云平台为例。</li>\\n<li>同时确保你有使用代理的能力，避免无法访问Vercel。</li>\\n</ul>\\n</div>","autoDesc":true}');export{b as comp,y as data};
