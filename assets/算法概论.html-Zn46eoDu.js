import{_ as t,r as n,o as e,c as i,b as m,a,e as r,d as l}from"./app-BBXnNxL0.js";const o={},c=a("p",null,"“算法分析与设计”面向设计，处于计算科学核心地位的软件基础教育。",-1),h=a("p",null,"对每一位从事计算机系统和应用研究与开发的软件工作者非常重要，必不可少。",-1),p=a("p",null,"参考教材（有中文版）：",-1),d=r('<h2 id="为什么学习算法" tabindex="-1"><a class="header-anchor" href="#为什么学习算法"><span>为什么学习算法？</span></a></h2><ul><li>Elegant Programmig 简明/优雅地编程</li><li>学习算法是培养一种优秀的解决问题能力的过程</li></ul><h3 id="培养思维" tabindex="-1"><a class="header-anchor" href="#培养思维"><span>培养思维</span></a></h3><ul><li>批判性思维</li><li>关键性思维</li><li>建设性思维</li></ul><h2 id="什么是算法" tabindex="-1"><a class="header-anchor" href="#什么是算法"><span>什么是算法</span></a></h2><p>算法（algorithm）是求解问题的一系列计算步骤，是一个由若干运算或指令组成的有限序列，用来将输入数据转换成输出结果。</p><div class="hint-container important"><p class="hint-container-title">《算法》一书描述</p><p>在计算机领域，我们用算法这个词来描述一种有限、确定、有效的并蛇和用计算机程序来实现的解决问题的方法。</p></div><h3 id="算法的5大特性" tabindex="-1"><a class="header-anchor" href="#算法的5大特性"><span>算法的5大特性</span></a></h3><ul><li>有穷性：在有限步之后结束</li><li>确定性：每一条指令必须有确切的含义，不会产生二义性。</li><li>可行性：人们仅用笔和纸做有限次运算就能完成。</li><li>输入：有零个或多个输入</li><li>输出：有一个或多个输入</li></ul><h3 id="算法设计的要求" tabindex="-1"><a class="header-anchor" href="#算法设计的要求"><span>算法设计的要求</span></a></h3><ul><li>正确性：对指定的每个输入实例都能输出正确的结果并停止。</li><li>可使用性：用户友好性。</li><li>可读性：算法逻辑清晰、简单和结构化。</li><li>健壮性：容错性。</li><li>高效率与低存储量：好的时空性能。</li></ul><div class="hint-container important"><p class="hint-container-title">补充</p><p><strong>好的程序</strong>：</p><ul><li>可高效运行</li><li>容易移植和继承</li><li>容易理解 <strong>程序是为人而写</strong>：</li><li>有用且高效的软件才能由长的生命周期</li><li>去培养软件，首先要必须要理解它</li><li>Code for people first , then for computers。</li></ul></div><h3 id="算法描述" tabindex="-1"><a class="header-anchor" href="#算法描述"><span>算法描述</span></a></h3><ul><li>Java语言描述算法</li><li>一般形式 <ul><li>Java中方法的参数分为<strong>引用类型</strong>和<strong>基本数据类型（非引用类型）</strong>。</li><li>在方法调用时基本数据类型参数只会执行实参到形参的单向值传递，执行方法中这类参数的改变不会回传给对应的实参。</li></ul></li></ul><p><strong>基本数据类型</strong>：整数、浮点、字符串、布尔等 <strong>引用类型</strong>：对象、数组、字符串等</p><div class="hint-container tip"><p class="hint-container-title">什么是类型？</p><p>类型有两个逻辑基本含义，一个工程含义</p><ul><li>类型首先是值的集合</li><li>特定的类型定义了施加在值上的运算</li><li>任意一个类型的实现最后都是一个有限的存储空间。</li></ul></div><h3 id="算法和数据结构" tabindex="-1"><a class="header-anchor" href="#算法和数据结构"><span>算法和数据结构</span></a></h3><ul><li><p>程序 = 数据结构 + 算法</p></li><li><p>数据结构算法设计的基础</p></li><li><p>算法的操作对象是数据结构</p></li><li><p>在设计算法时通常要构建适合这种算法的数据结构</p></li></ul><h3 id="算法设计的基本步骤" tabindex="-1"><a class="header-anchor" href="#算法设计的基本步骤"><span>算法设计的基本步骤</span></a></h3><ul><li>分析求解问题</li><li>建立数学模型</li><li>选择数据结构和算法设计策略</li><li>描述算法</li><li>证明算法正确性</li><li>算法分析</li></ul><h2 id="算法分析" tabindex="-1"><a class="header-anchor" href="#算法分析"><span>算法分析</span></a></h2><ol><li>算法时间复杂度</li><li>算法空间复杂度</li></ol><h3 id="时间复杂度" tabindex="-1"><a class="header-anchor" href="#时间复杂度"><span>时间复杂度</span></a></h3>',23),g=a("ul",null,[a("li",null,"事前分析估算法"),a("li",null,"算法执行时间时算法中所有语句执行时间之和"),a("li",null,"算法中的基本操作对时间执行时间贡献最大"),a("li",null,[l("使用"),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"f"),a("mo",{stretchy:"false"},"("),a("mi",null,"n"),a("mo",{stretchy:"false"},")")]),a("annotation",{encoding:"application/x-tex"},"f(n)")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),a("span",{class:"mopen"},"("),a("span",{class:"mord mathnormal"},"n"),a("span",{class:"mclose"},")")])])]),l("表示")])],-1),u=a("p",null,"算法时间复杂度分析是一种渐进分析，可表示为：",-1),x=a("p",null,[a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("msub",null,[a("mrow",null,[a("mi",null,"lim"),a("mo",null,"⁡")]),a("mrow",null,[a("mi",null,"n"),a("mo",null,"→"),a("mi",{mathvariant:"normal"},"∞")])]),a("mi",null,"f"),a("mo",{stretchy:"false"},"("),a("mi",null,"n"),a("mo",{stretchy:"false"},")")]),a("annotation",{encoding:"application/x-tex"},"\\lim_{n \\to \\infty}f(n)")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),a("span",{class:"mop"},[a("span",{class:"mop"},"lim"),a("span",{class:"msupsub"},[a("span",{class:"vlist-t vlist-t2"},[a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.1514em"}},[a("span",{style:{top:"-2.55em","margin-right":"0.05em"}},[a("span",{class:"pstrut",style:{height:"2.7em"}}),a("span",{class:"sizing reset-size6 size3 mtight"},[a("span",{class:"mord mtight"},[a("span",{class:"mord mathnormal mtight"},"n"),a("span",{class:"mrel mtight"},"→"),a("span",{class:"mord mtight"},"∞")])])])]),a("span",{class:"vlist-s"},"​")]),a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.15em"}},[a("span")])])])])]),a("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),a("span",{class:"mopen"},"("),a("span",{class:"mord mathnormal"},"n"),a("span",{class:"mclose"},")")])])])],-1),y=a("p",null,"同时忽略低阶项和最高阶系数。",-1),k=a("h3",{id:"渐进符号",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#渐进符号"},[a("span",null,"渐进符号")])],-1),_=a("div",{class:"hint-container important"},[a("p",{class:"hint-container-title"},"补充"),a("p",null,[l("渐进符号（Asymptotic Notation）是计算机科学中用于描述算法性能（尤其是算法运行时间和空间复杂度）的一种数学工具。它提供了一种方式来描述算法的运行时间或占用空间随着输入大小增加时的行为趋势。渐进符号不提供精确的时间或空间量度，而是"),a("mark",null,"提供了一个上界或下界，或者两者的组合，来描述算法的性能"),l("。")])],-1),w=a("p",null,"渐进符号主要有以下几种：",-1),v=a("ol",null,[a("li",null,[a("p",null,[a("strong",null,"O符号（大O符号）"),l("：表示算法的上界，即算法运行时间或空间复杂度的增长率不会超过某个函数的增长率。例如，如果一个算法的时间复杂度是 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"O"),a("mo",{stretchy:"false"},"("),a("msup",null,[a("mi",null,"n"),a("mn",null,"2")]),a("mo",{stretchy:"false"},")")]),a("annotation",{encoding:"application/x-tex"},"O(n^2)")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"1.0641em","vertical-align":"-0.25em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),a("span",{class:"mopen"},"("),a("span",{class:"mord"},[a("span",{class:"mord mathnormal"},"n"),a("span",{class:"msupsub"},[a("span",{class:"vlist-t"},[a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.8141em"}},[a("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[a("span",{class:"pstrut",style:{height:"2.7em"}}),a("span",{class:"sizing reset-size6 size3 mtight"},[a("span",{class:"mord mtight"},"2")])])])])])])]),a("span",{class:"mclose"},")")])])]),l("，这意味着随着输入大小 n 的增加，算法的运行时间最多是 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("msup",null,[a("mi",null,"n"),a("mn",null,"2")])]),a("annotation",{encoding:"application/x-tex"},"n^2")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.8141em"}}),a("span",{class:"mord"},[a("span",{class:"mord mathnormal"},"n"),a("span",{class:"msupsub"},[a("span",{class:"vlist-t"},[a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.8141em"}},[a("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[a("span",{class:"pstrut",style:{height:"2.7em"}}),a("span",{class:"sizing reset-size6 size3 mtight"},[a("span",{class:"mord mtight"},"2")])])])])])])])])])]),l(" 的多项式时间。")])]),a("li",null,[a("p",null,[a("strong",null,"Ω符号（大Omega符号）"),l("：表示算法的下界，即算法运行时间或空间复杂度的增长率不会低于某个函数的增长率。例如，如果一个算法的时间复杂度"),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mtext",null,"是"),a("mi",{mathvariant:"normal"},"Ω"),a("mo",{stretchy:"false"},"("),a("mi",null,"n"),a("mi",null,"l"),a("mi",null,"o"),a("mi",null,"g"),a("mi",null,"n"),a("mo",{stretchy:"false"},")")]),a("annotation",{encoding:"application/x-tex"},"是 Ω(n log n)")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),a("span",{class:"mord cjk_fallback"},"是"),a("span",{class:"mord"},"Ω"),a("span",{class:"mopen"},"("),a("span",{class:"mord mathnormal"},"n"),a("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),a("span",{class:"mord mathnormal"},"o"),a("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),a("span",{class:"mord mathnormal"},"n"),a("span",{class:"mclose"},")")])])]),l("，这意味着随着输入大小 n 的增加，算法的运行时间至少是"),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"n"),a("mi",null,"l"),a("mi",null,"o"),a("mi",null,"g"),a("mi",null,"n")]),a("annotation",{encoding:"application/x-tex"},"nlogn")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),a("span",{class:"mord mathnormal"},"n"),a("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),a("span",{class:"mord mathnormal"},"o"),a("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),a("span",{class:"mord mathnormal"},"n")])])]),l("的线性对数时间。")])]),a("li",null,[a("p",null,[a("strong",null,"Θ符号（Theta符号）"),l("：表示算法的精确界，即算法运行时间或空间复杂度的增长率与某个函数的增长率相同。例如，如果一个算法的时间复杂度是 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",{mathvariant:"normal"},"Θ"),a("mo",{stretchy:"false"},"("),a("mi",null,"n"),a("mi",null,"l"),a("mi",null,"o"),a("mi",null,"g"),a("mi",null,"n"),a("mo",{stretchy:"false"},")")]),a("annotation",{encoding:"application/x-tex"},"Θ(n log n)")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),a("span",{class:"mord"},"Θ"),a("span",{class:"mopen"},"("),a("span",{class:"mord mathnormal"},"n"),a("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),a("span",{class:"mord mathnormal"},"o"),a("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),a("span",{class:"mord mathnormal"},"n"),a("span",{class:"mclose"},")")])])]),l("，这意味着算法的运行时间随着输入大小 n 的增加，其增长率既不会超过也不会低于 "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"n"),a("mi",null,"l"),a("mi",null,"o"),a("mi",null,"g"),a("mi",null,"n")]),a("annotation",{encoding:"application/x-tex"},"n log n")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),a("span",{class:"mord mathnormal"},"n"),a("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),a("span",{class:"mord mathnormal"},"o"),a("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),a("span",{class:"mord mathnormal"},"n")])])]),l("。")])])],-1);function b(f,M){const s=n("BookCard");return e(),i("div",null,[c,h,p,m(s,{arr:`[
    {"title":"算法", "url":"https://weread.qq.com/web/reader/7cc32910718ff66b7cc8d9d", "desc":"经典", "img":"/book/算法.jpg", "author":"Robert Sedgewick", "tag":"计算机"}
]`}),d,g,u,x,y,k,_,w,v])}const z=t(o,[["render",b],["__file","算法概论.html.vue"]]),T=JSON.parse('{"path":"/technology/algorithm/%E7%AE%97%E6%B3%95%E6%A6%82%E8%AE%BA.html","title":"算法概论","lang":"zh-CN","frontmatter":{"title":"算法概论","icon":"code","date":"2024-09-03T00:00:00.000Z","category":"算法设计与分析","tags":["算法"],"cover":"/assets/images/算法.jpg","excerpt":"“算法分析与设计”面向设计，处于计算科学核心地位的软件基础教育。对每一位从事计算机系统和应用研究与开发的软件工作者非常重要，必不可少。","order":"1","description":"“算法分析与设计”面向设计，处于计算科学核心地位的软件基础教育。 对每一位从事计算机系统和应用研究与开发的软件工作者非常重要，必不可少。 参考教材（有中文版）： 为什么学习算法？ Elegant Programmig 简明/优雅地编程 学习算法是培养一种优秀的解决问题能力的过程 培养思维 批判性思维 关键性思维 建设性思维 什么是算法 算法（algor...","head":[["meta",{"property":"og:url","content":"https://matike16.github.io/dadagarden.github.io/dadagarden.github.io/technology/algorithm/%E7%AE%97%E6%B3%95%E6%A6%82%E8%AE%BA.html"}],["meta",{"property":"og:site_name","content":"哒哒的花园"}],["meta",{"property":"og:title","content":"算法概论"}],["meta",{"property":"og:description","content":"“算法分析与设计”面向设计，处于计算科学核心地位的软件基础教育。 对每一位从事计算机系统和应用研究与开发的软件工作者非常重要，必不可少。 参考教材（有中文版）： 为什么学习算法？ Elegant Programmig 简明/优雅地编程 学习算法是培养一种优秀的解决问题能力的过程 培养思维 批判性思维 关键性思维 建设性思维 什么是算法 算法（algor..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://matike16.github.io/dadagarden.github.io/dadagarden.github.io/assets/images/算法.jpg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-05T01:09:36.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://matike16.github.io/dadagarden.github.io/dadagarden.github.io/assets/images/算法.jpg"}],["meta",{"name":"twitter:image:alt","content":"算法概论"}],["meta",{"property":"article:author","content":"哒哒溜"}],["meta",{"property":"article:tag","content":"算法"}],["meta",{"property":"article:published_time","content":"2024-09-03T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-05T01:09:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"算法概论\\",\\"image\\":[\\"https://matike16.github.io/dadagarden.github.io/dadagarden.github.io/assets/images/算法.jpg\\"],\\"datePublished\\":\\"2024-09-03T00:00:00.000Z\\",\\"dateModified\\":\\"2024-09-05T01:09:36.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"哒哒溜\\",\\"url\\":\\"https://github.com/matike16\\"}]}"]]},"headers":[{"level":2,"title":"为什么学习算法？","slug":"为什么学习算法","link":"#为什么学习算法","children":[{"level":3,"title":"培养思维","slug":"培养思维","link":"#培养思维","children":[]}]},{"level":2,"title":"什么是算法","slug":"什么是算法","link":"#什么是算法","children":[{"level":3,"title":"算法的5大特性","slug":"算法的5大特性","link":"#算法的5大特性","children":[]},{"level":3,"title":"算法设计的要求","slug":"算法设计的要求","link":"#算法设计的要求","children":[]},{"level":3,"title":"算法描述","slug":"算法描述","link":"#算法描述","children":[]},{"level":3,"title":"算法和数据结构","slug":"算法和数据结构","link":"#算法和数据结构","children":[]},{"level":3,"title":"算法设计的基本步骤","slug":"算法设计的基本步骤","link":"#算法设计的基本步骤","children":[]}]},{"level":2,"title":"算法分析","slug":"算法分析","link":"#算法分析","children":[{"level":3,"title":"时间复杂度","slug":"时间复杂度","link":"#时间复杂度","children":[]},{"level":3,"title":"渐进符号","slug":"渐进符号","link":"#渐进符号","children":[]}]}],"git":{"createdTime":1725326569000,"updatedTime":1725498576000,"contributors":[{"name":"matike16","email":"lda240820@gmail.com","commits":2}]},"readingTime":{"minutes":4.71,"words":1413},"filePathRelative":"technology/algorithm/算法概论.md","localizedDate":"2024年9月3日","autoDesc":true}');export{z as comp,T as data};
